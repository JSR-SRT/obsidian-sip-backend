// import 'dotenv' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå .env
import dotenv from "dotenv";
// import Order model ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ß‡πâ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô collection 'orders'
import { Order } from "../../models/Order.js";

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ dotenv.config() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ project ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå .env ‡πÑ‡∏î‡πâ
dotenv.config();

// Helper function ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô
const generateOrderNumber = () => {
  const min = 100000; // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏•‡∏Ç‡∏ô‡πâ‡∏≠‡∏¢‡∏™‡∏∏‡∏î
  const max = 999999; // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏•‡∏Ç‡∏°‡∏≤‡∏Å‡∏™‡∏∏‡∏î
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏•‡∏Ç‡∏™‡∏∏‡πà‡∏° 6 ‡∏´‡∏•‡∏±‡∏Å ‡πÅ‡∏•‡∏∞‡∏ô‡∏≥‡πÑ‡∏õ‡∏ï‡πà‡∏≠‡∏ó‡πâ‡∏≤‡∏¢ 'ORD-'
  return `ORD-${Math.floor(Math.random() * (max - min + 1)) + min}`;
};

// POST ‚Üí create order ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏´‡∏°‡πà (‡πÉ‡∏ä‡πâ‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Å‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤ Checkout)
export const createOrder = async (req, res) => {
  try {
    // (‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢) ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å middleware authUser ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ login ‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ 401 ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° error
    if (!req.user?._id) {
      return res
        .status(401)
        .json({ error: true, message: "Not authenticated" });
    }
    // ‡∏î‡∏∂‡∏á userId ‡∏à‡∏≤‡∏Å req.user ‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏à‡∏≤‡∏Å middleware
    const userId = req.user._id;
    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏≤‡∏Å body ‡∏Ç‡∏≠‡∏á request (‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏à‡∏≤‡∏Å frontend)
    const {
      customerInfo,
      basketItems,
      orderType,
      address,
      subtotal,
      // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á deliveryFee ‡πÄ‡∏õ‡πá‡∏ô 0 ‡∏ñ‡πâ‡∏≤ Frontend ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏™‡πà‡∏á‡∏°‡∏≤
      deliveryFee = 0,
      total,
      note,
    } = req.body;

    // Validation (‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ß‡πà‡∏≤‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏°‡∏≤‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡πÅ‡∏•‡∏∞‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà)
    if (
      !customerInfo || // ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
      !Array.isArray(basketItems) || // basketItems ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô Array
      basketItems.length === 0 || // basketItems ‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô Array ‡∏ß‡πà‡∏≤‡∏á
      !orderType || // ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
      subtotal == null || // subtotal ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡πà‡∏≤ (‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô null ‡∏´‡∏£‡∏∑‡∏≠ undefined)
      total == null // total ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡πà‡∏≤ (‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô null ‡∏´‡∏£‡∏∑‡∏≠ undefined)
    ) {
      // ‡∏ñ‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö ‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ 400 (Bad Request) ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° error
      return res.status(400).json({
        error: true,
        message: "Missing required order data.",
      });
    }

    // Ensure orderNumber is unique (retry a few times if collision)
    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÅ‡∏•‡∏∞‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏•‡∏≠‡∏á‡∏™‡∏∏‡πà‡∏°
    let orderNumber;
    let attempts = 0;
    // ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 5 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥
    while (attempts < 5) {
      // ‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
      orderNumber = generateOrderNumber();
      // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÉ‡∏ô database ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÄ‡∏•‡∏Ç‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      const exists = await Order.findOne({ orderNumber }).lean().exec();
      // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡πÄ‡∏•‡∏Ç‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥ ‡πÉ‡∏´‡πâ‡∏´‡∏¢‡∏∏‡∏î loop ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
      if (!exists) break;
      // ‡∏ñ‡πâ‡∏≤‡∏û‡∏ö ‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏•‡∏≠‡∏á‡∏™‡∏∏‡πà‡∏°
      attempts++;
    }

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Object ‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å Order model ‡πÅ‡∏•‡∏∞‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö
    const newOrder = new Order({
      orderNumber,
      customerInfo,
      basketItems,
      orderType,
      // ‡∏ñ‡πâ‡∏≤ orderType ‡πÄ‡∏õ‡πá‡∏ô "delivery" ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ address ‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤ ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤ "N/A"
      address: orderType === "delivery" ? address : "N/A",
      subtotal,
      // ‡∏ñ‡πâ‡∏≤ orderType ‡πÄ‡∏õ‡πá‡∏ô "delivery" ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ deliveryFee ‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤ ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πà‡∏≤ 0
      deliveryFee: orderType === "delivery" ? deliveryFee : 0,
      total,
      note,
      user: userId,
    });

    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Object ‡πÉ‡∏´‡∏°‡πà‡∏•‡∏á‡πÉ‡∏ô database
    await newOrder.save();

    // Response to frontend ‡∏™‡πà‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ 201 (Created) ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• order ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß
    res.status(201).json({
      error: false,
      message: "Order created successfully",
      order: newOrder,
    });
  } catch (err) {
    // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏î‡πÜ ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£ ‡πÉ‡∏´‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å error ‡∏•‡∏á console
    console.error("Create order error:", err);
    // ‡∏™‡πà‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ 500 (Server Error) ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° error ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ
    res.status(500).json({
      error: true,
      message: "Kindly ü§ç login to continue with your order.",
      details: err.message,
    });
  }
};

// GET ‚Üí all orders ‡∏Ç‡∏≠‡∏á user
// Function ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á user ‡∏ó‡∏µ‡πà login ‡∏≠‡∏¢‡∏π‡πà ‡∏°‡∏≤‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤ profile/my orders
export const getUserOrders = async (req, res) => {
  try {
    // (‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢) ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å middleware ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (!req.user?._id) {
      // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ login ‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ 401 ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° error
      return res
        .status(401)
        .json({ error: true, message: "Not authenticated" });
    }
    // ‡∏î‡∏∂‡∏á userId ‡∏à‡∏≤‡∏Å req.user
    const userId = req.user._id;
    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô database ‡∏ó‡∏µ‡πà user ID ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö user ‡∏ó‡∏µ‡πà login ‡∏≠‡∏¢‡∏π‡πà
    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏õ‡πÄ‡∏Å‡πà‡∏≤ (-createdAt)
    const orders = await Order.find({ user: userId }).sort({ createdAt: -1 });

    // ‡∏™‡πà‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ 200 (OK) ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ orders ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ
    res.status(200).json({
      error: false,
      orders,
      message: "Orders fetched successfully.",
    });
  } catch (err) {
    // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡πÉ‡∏´‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å error ‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ 500 ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° error ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ
    res.status(500).json({
      error: true,
      message: "Server error, failed to fetch orders.",
      details: err.message,
    });
  }
};

// GET ‚Üí single order
// Function ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏µ‡∏¢‡∏ß (‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• order ‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏°‡∏≤‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤ Order Confirmation
export const getOrderById = async (req, res) => {
  try {
    // (‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢) ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å middleware ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (!req.user?._id) {
      // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ login ‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ 401 ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° error
      return res
        .status(401)
        .json({ error: true, message: "Not authenticated" });
    }
    // ‡∏î‡∏∂‡∏á orderId ‡∏à‡∏≤‡∏Å params ‡πÉ‡∏ô URL
    const { orderId } = req.params;
    // ‡∏î‡∏∂‡∏á userId ‡∏à‡∏≤‡∏Å req.user
    const userId = req.user._id;

    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• order ‡πÉ‡∏ô database ‡∏ó‡∏µ‡πà _id ‡πÅ‡∏•‡∏∞ user ID ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ user ‡∏î‡∏π order ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡πÑ‡∏î‡πâ
    const order = await Order.findOne({ _id: orderId, user: userId });

    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö order ‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ 404 (Not Found) ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ
    if (!order) {
      return res.status(404).json({
        error: true,
        message: "Order not found or you do not have permission to view it.",
      });
    }

    // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏à‡∏≠ order ‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ 200 (OK) ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• order ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ
    res.status(200).json({
      error: false,
      order,
      message: "Order fetched successfully.",
    });
  } catch (err) {
    // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡πÉ‡∏´‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å error ‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ 500 ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° error ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ
    res.status(500).json({
      error: true,
      message: "Server error, failed to fetch order.",
      details: err.message,
    });
  }
};
